{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/custom/CustomLabel.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport styled from \"@emotion/styled\";\nvar P = styled.p(_c = function _c(_ref) {\n  var fontSize = _ref.fontSize,\n      fontType = _ref.fontType,\n      fontWeight = _ref.fontWeight,\n      color = _ref.color,\n      type = _ref.type,\n      fontFamily = _ref.fontFamily,\n      backgroundColor = _ref.backgroundColor;\n  return {\n    fontSize: \"\".concat(String(fontSize + fontType)),\n    color: \"\".concat(color),\n    backgroundColor: \"\".concat(backgroundColor),\n    fontWeight: fontWeight,\n    textAlign: type,\n    fontFamily: fontFamily\n  };\n});\n_c2 = P;\n\nvar CustomLabel = function CustomLabel(_ref2) {\n  var fontSize = _ref2.fontSize,\n      fontWeight = _ref2.fontWeight,\n      fontType = _ref2.fontType,\n      text = _ref2.text,\n      color = _ref2.color,\n      type = _ref2.type,\n      style = _ref2.style,\n      onClick = _ref2.onClick,\n      fontFamily = _ref2.fontFamily,\n      backgroundColor = _ref2.backgroundColor;\n  return /*#__PURE__*/_jsxDEV(P, {\n    fontSize: fontSize,\n    fontType: fontType,\n    fontWeight: fontWeight,\n    color: color,\n    type: type,\n    onClick: onClick,\n    style: style,\n    backgroundColor: backgroundColor,\n    fontFamily: fontFamily ? fontFamily : 'Helvetica Neue',\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_c3 = CustomLabel;\nexport default CustomLabel;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"P$styled.p\");\n$RefreshReg$(_c2, \"P\");\n$RefreshReg$(_c3, \"CustomLabel\");","map":{"version":3,"sources":["/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/custom/CustomLabel.tsx"],"names":["React","styled","P","p","fontSize","fontType","fontWeight","color","type","fontFamily","backgroundColor","String","textAlign","CustomLabel","text","style","onClick"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAyBA,IAAMC,CAAC,GAAGD,MAAM,CAACE,CAAP,MAAS;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,MAAuBC,UAAvB,QAAuBA,UAAvB;AAAA,MAAmCC,KAAnC,QAAmCA,KAAnC;AAAA,MAA0CC,IAA1C,QAA0CA,IAA1C;AAAA,MAAgDC,UAAhD,QAAgDA,UAAhD;AAAA,MAA4DC,eAA5D,QAA4DA,eAA5D;AAAA,SAAkG;AACjHN,IAAAA,QAAQ,YAAKO,MAAM,CAACP,QAAQ,GAAGC,QAAZ,CAAX,CADyG;AAEjHE,IAAAA,KAAK,YAAKA,KAAL,CAF4G;AAGjHG,IAAAA,eAAe,YAAKA,eAAL,CAHkG;AAIjHJ,IAAAA,UAAU,EAAVA,UAJiH;AAKjHM,IAAAA,SAAS,EAAEJ,IALsG;AAMjHC,IAAAA,UAAU,EAAVA;AANiH,GAAlG;AAAA,CAAT,CAAV;MAAMP,C;;AASN,IAAMW,WAA2C,GAAG,SAA9CA,WAA8C;AAAA,MAAGT,QAAH,SAAGA,QAAH;AAAA,MAAaE,UAAb,SAAaA,UAAb;AAAA,MAAyBD,QAAzB,SAAyBA,QAAzB;AAAA,MAAmCS,IAAnC,SAAmCA,IAAnC;AAAA,MAAyCP,KAAzC,SAAyCA,KAAzC;AAAA,MAAgDC,IAAhD,SAAgDA,IAAhD;AAAA,MAAsDO,KAAtD,SAAsDA,KAAtD;AAAA,MAA6DC,OAA7D,SAA6DA,OAA7D;AAAA,MAAsEP,UAAtE,SAAsEA,UAAtE;AAAA,MAAkFC,eAAlF,SAAkFA,eAAlF;AAAA,sBAChD,QAAC,CAAD;AAAG,IAAA,QAAQ,EAAEN,QAAb;AAAuB,IAAA,QAAQ,EAAEC,QAAjC;AAA2C,IAAA,UAAU,EAAEC,UAAvD;AAAmE,IAAA,KAAK,EAAEC,KAA1E;AAAiF,IAAA,IAAI,EAAEC,IAAvF;AACI,IAAA,OAAO,EAAEQ,OADb;AACsB,IAAA,KAAK,EAAED,KAD7B;AACoC,IAAA,eAAe,EAAEL,eADrD;AACsE,IAAA,UAAU,EAAED,UAAU,GAAGA,UAAH,GAAgB,gBAD5G;AAAA,cAEKK;AAFL;AAAA;AAAA;AAAA;AAAA,WADgD;AAAA,CAApD;;MAAMD,W;AAON,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n    fontSize: string | number | undefined\n    fontWeight?: any\n    fontFamily?: string\n    color?: string\n    backgroundColor?: string\n    fontType: 'px' | 'pt'\n    text: string\n    type?: any\n    style?: object\n    onClick?: () => void\n}\n\ninterface PTagInterface {\n    fontSize: string | number | undefined\n    fontType: 'px' | 'pt'\n    fontFamily: string\n    fontWeight?: any\n    color?: string\n    backgroundColor?: string\n    type?: any\n}\n\nconst P = styled.p(({ fontSize, fontType, fontWeight, color, type, fontFamily, backgroundColor }: PTagInterface) => ({\n    fontSize: `${String(fontSize + fontType)}`,\n    color: `${color}`,\n    backgroundColor: `${backgroundColor}`,\n    fontWeight,\n    textAlign: type,\n    fontFamily\n}))\n\nconst CustomLabel: React.FunctionComponent<Props> = ({ fontSize, fontWeight, fontType, text, color, type, style, onClick, fontFamily, backgroundColor }) => (\n    <P fontSize={fontSize} fontType={fontType} fontWeight={fontWeight} color={color} type={type}\n        onClick={onClick} style={style} backgroundColor={backgroundColor} fontFamily={fontFamily ? fontFamily : 'Helvetica Neue'}>\n        {text}\n    </P>\n)\n\nexport default CustomLabel\n"]},"metadata":{},"sourceType":"module"}
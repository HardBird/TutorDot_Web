{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/custom/CustomButton.tsx\";\nimport React from 'react';\nimport { PRIVATE_DARK_YELLOW, PRIVATE_YELLOW_COLOR } from '../types/publicStyles';\nimport styled from \"@emotion/styled\";\nconst Button = styled.button(({\n  backgroundColor\n}) => ({\n  boxShadow: '2px 3px 2px 0px #00000029',\n  backgroundColor: `${backgroundColor ? PRIVATE_YELLOW_COLOR : PRIVATE_DARK_YELLOW}`,\n  borderRadius: '5pt',\n  border: 0,\n  cursor: 'pointer',\n  height: '40pt',\n  width: '84pt',\n  outlineStyle: 'none',\n  zIndex: 10\n}));\nconst Label = styled.label(({\n  fontSize,\n  fontColor,\n  fontFamily\n}) => ({\n  fontFamily: `${fontFamily}`,\n  fontWeight: 'bold',\n  cursor: 'pointer',\n  fontSize: `${fontSize ? fontSize : 12}pt`,\n  color: `${fontColor}`\n}));\n\nconst CustomButton = ({\n  type,\n  text,\n  onCancel,\n  onClick,\n  style,\n  fontSize,\n  fontColor,\n  fontFamily,\n  background = true,\n  form,\n  disabled\n}) => /*#__PURE__*/_jsxDEV(Button, {\n  disabled: disabled,\n  type: type,\n  onClick: onClick,\n  style: style,\n  backgroundColor: background,\n  form: form,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Label, {\n      fontSize: fontSize,\n      fontColor: fontColor,\n      fontFamily: fontFamily ? fontFamily : 'Helvetica Neue',\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this);\n\nexport default CustomButton;","map":{"version":3,"sources":["/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/custom/CustomButton.tsx"],"names":["React","PRIVATE_DARK_YELLOW","PRIVATE_YELLOW_COLOR","styled","Button","button","backgroundColor","boxShadow","borderRadius","border","cursor","height","width","outlineStyle","zIndex","Label","label","fontSize","fontColor","fontFamily","fontWeight","color","CustomButton","type","text","onCancel","onClick","style","background","form","disabled","display","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,uBAA1D;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAgBA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAyD;AAClFC,EAAAA,SAAS,EAAE,2BADuE;AAElFD,EAAAA,eAAe,EAAG,GAAEA,eAAe,GAAGJ,oBAAH,GAA0BD,mBAAoB,EAFC;AAGlFO,EAAAA,YAAY,EAAE,KAHoE;AAIlFC,EAAAA,MAAM,EAAE,CAJ0E;AAKlFC,EAAAA,MAAM,EAAE,SAL0E;AAMlFC,EAAAA,MAAM,EAAE,MAN0E;AAOlFC,EAAAA,KAAK,EAAE,MAP2E;AAQlFC,EAAAA,YAAY,EAAE,MARoE;AASlFC,EAAAA,MAAM,EAAE;AAT0E,CAAzD,CAAd,CAAf;AAYA,MAAMC,KAAK,GAAGZ,MAAM,CAACa,KAAP,CAAa,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,MAA2H;AAClJA,EAAAA,UAAU,EAAG,GAAEA,UAAW,EADwH;AAElJC,EAAAA,UAAU,EAAE,MAFsI;AAGlJV,EAAAA,MAAM,EAAE,SAH0I;AAIlJO,EAAAA,QAAQ,EAAG,GAAEA,QAAQ,GAAGA,QAAH,GAAc,EAAG,IAJ4G;AAKlJI,EAAAA,KAAK,EAAG,GAAEH,SAAU;AAL8H,CAA3H,CAAb,CAAd;;AAQA,MAAMI,YAA4C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA,OAAxB;AAAiCC,EAAAA,KAAjC;AAAwCV,EAAAA,QAAxC;AAAkDC,EAAAA,SAAlD;AAA6DC,EAAAA,UAA7D;AAAyES,EAAAA,UAAU,GAAG,IAAtF;AAA4FC,EAAAA,IAA5F;AAAkGC,EAAAA;AAAlG,CAAD,kBACjD,QAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEA,QAAlB;AAA4B,EAAA,IAAI,EAAEP,IAAlC;AAAwC,EAAA,OAAO,EAAEG,OAAjD;AAA0D,EAAA,KAAK,EAAEC,KAAjE;AAAwE,EAAA,eAAe,EAAEC,UAAzF;AAAqG,EAAA,IAAI,EAAEC,IAA3G;AAAA,yBACI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,UAAU,EAAE;AAAzD,KAAZ;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEhB,QAAjB;AAA2B,MAAA,SAAS,EAAEC,SAAtC;AAAiD,MAAA,UAAU,EAAEC,UAAU,GAAGA,UAAH,GAAgB,gBAAvF;AAAA,gBAA0GK;AAA1G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ;;AAQA,eAAeF,YAAf","sourcesContent":["import React from 'react'\nimport { PRIVATE_DARK_YELLOW, PRIVATE_YELLOW_COLOR } from '../types/publicStyles'\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n    text: string\n    onClick?: () => void\n    onCancel?: () => void\n    background?: boolean\n    type?: \"button\" | \"submit\" | \"reset\"\n    style?: object\n    fontSize?: number | string\n    fontColor?: string\n    fontFamily?: string\n    form?: string\n    disabled?: boolean\n}\n\nconst Button = styled.button(({ backgroundColor }: { backgroundColor?: boolean }) => ({\n    boxShadow: '2px 3px 2px 0px #00000029',\n    backgroundColor: `${backgroundColor ? PRIVATE_YELLOW_COLOR : PRIVATE_DARK_YELLOW}`,\n    borderRadius: '5pt',\n    border: 0,\n    cursor: 'pointer',\n    height: '40pt',\n    width: '84pt',\n    outlineStyle: 'none',\n    zIndex: 10\n}))\n\nconst Label = styled.label(({ fontSize, fontColor, fontFamily }: { fontSize?: string | number, fontColor?: string | number, fontFamily: string }) => ({\n    fontFamily: `${fontFamily}`,\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    fontSize: `${fontSize ? fontSize : 12}pt`,\n    color: `${fontColor}`\n}))\n\nconst CustomButton: React.FunctionComponent<Props> = ({ type, text, onCancel, onClick, style, fontSize, fontColor, fontFamily, background = true, form, disabled }) => (\n    <Button disabled={disabled} type={type} onClick={onClick} style={style} backgroundColor={background} form={form}>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <Label fontSize={fontSize} fontColor={fontColor} fontFamily={fontFamily ? fontFamily : 'Helvetica Neue'}>{text}</Label>\n        </div>\n    </Button>\n)\n\nexport default CustomButton\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from \"@emotion/styled\";\nimport CustomLabel from '../custom/CustomLabel';\nimport CustomButton from '../custom/CustomButton';\nimport { publicStyles } from '../types/publicStyles';\nconst InputLogin = styled.input(() => ({\n  /*  boxShadow: '2px 3px 2px 0px #00000029', */\n  width: '372px',\n  borderRadius: 8,\n  height: 54,\n  border: 0,\n  padding: '0 20px',\n  fontSize: 16\n}));\nconst PInput = styled.p(() => ({\n  padding: 0,\n  margin: 3\n}));\n\nconst LoginContainer = () => {\n  const [logins, setLogins] = React.useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = React.useState({\n    email: '',\n    password: ''\n  });\n\n  const Header = () => /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(CustomLabel, {\n      fontSize: 20,\n      fontType: 'px',\n      text: '시작하기',\n      fontWeight: 'bold',\n      type: 'center',\n      style: {\n        marginBottom: 7\n      }\n    }), /*#__PURE__*/_jsx(CustomLabel, {\n      fontSize: 14,\n      fontType: 'px',\n      text: '관리자 전용페이지 입니다!. 관리자 계정으로 로그인해주세요.',\n      type: 'center',\n      style: {\n        marginTop: 0,\n        fontSize: 14,\n        marginBottom: 20\n      }\n    })]\n  });\n\n  const Content = () => /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(PInput, {\n      children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n    }), /*#__PURE__*/_jsx(InputLogin, {\n      style: {\n        marginBottom: 20\n      },\n      onChange: e => setLogins(_objectSpread(_objectSpread({}, logins), {}, {\n        email: e.target.value\n      })),\n      value: logins.email,\n      type: \"email\"\n    }), /*#__PURE__*/_jsx(PInput, {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }), /*#__PURE__*/_jsx(InputLogin, {\n      onChange: e => setLogins(_objectSpread(_objectSpread({}, logins), {}, {\n        password: e.target.value\n      })),\n      value: logins.password,\n      type: \"password\"\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: _objectSpread(_objectSpread({}, publicStyles.startCenter), {}, {\n        marginTop: '24pt'\n      }),\n      children: /*#__PURE__*/_jsx(CustomButton, {\n        text: '로그인',\n        style: {\n          width: '80pt',\n          height: '35pt',\n          background: '#6875dd'\n        },\n        onClick: login,\n        background: false,\n        fontColor: 'white'\n      })\n    })]\n  }); // { //console.log('ads', logins) }\n\n\n  const Footer = () => /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    }\n  });\n\n  const userValidationCheck = () => {\n    const {\n      email,\n      password\n    } = logins;\n    const errorCatch = {\n      email: '',\n      password: ''\n    };\n    let getError = false;\n\n    if (email === '') {\n      getError = true;\n    }\n\n    if (password === '') {\n      getError = true;\n    }\n\n    setErrors(_objectSpread(_objectSpread({}, errors), errorCatch));\n    return getError;\n  };\n\n  const login = async () => {};\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      zIndex: 50\n    },\n    children: [Header(), Content(), Footer()]\n  });\n};\n\nexport default LoginContainer;","map":null,"metadata":{},"sourceType":"module"}
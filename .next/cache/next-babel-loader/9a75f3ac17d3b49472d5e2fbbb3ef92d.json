{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/containers/LoginContainer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from \"@emotion/styled\";\nimport Cookies from 'js-cookie';\nimport CustomLabel from '../custom/CustomLabel';\nimport CustomButton from '../custom/CustomButton';\nimport { publicStyles } from '../types/publicStyles';\nimport LoginContext from \"../context/LoginContext\";\nimport API_LOGIN from \"../api/Account/AccountLogin\";\nconst InputLogin = styled.input(() => ({\n  /*  boxShadow: '2px 3px 2px 0px #00000029', */\n  width: '372px',\n  borderRadius: 8,\n  height: 54,\n  border: 0,\n  padding: '0 20px',\n  fontSize: 16,\n  background: '#F0F0F0'\n}));\nconst PInput = styled.p(() => ({\n  padding: 0,\n  margin: 3\n}));\n\nconst LoginContainer = () => {\n  const [logins, setLogins] = React.useState({\n    email: '',\n    password: ''\n  });\n  const [errors, setErrors] = React.useState({\n    email: '',\n    password: ''\n  });\n  const loginContext = React.useContext(LoginContext);\n\n  const Header = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomLabel, {\n      fontSize: 20,\n      fontType: 'px',\n      text: '시작하기',\n      fontWeight: 'bold',\n      type: 'center',\n      style: {\n        marginBottom: 7\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomLabel, {\n      fontSize: 14,\n      fontType: 'px',\n      text: '관리자 전용페이지 입니다!. 관리자 계정으로 로그인해주세요.',\n      type: 'center',\n      style: {\n        marginTop: 0,\n        fontSize: 14,\n        marginBottom: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n\n  const Content = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PInput, {\n      children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n      style: {\n        marginBottom: 20\n      },\n      onChange: e => setLogins(_objectSpread(_objectSpread({}, logins), {}, {\n        email: e.target.value\n      })),\n      value: logins.email,\n      type: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PInput, {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n      onChange: e => setLogins(_objectSpread(_objectSpread({}, logins), {}, {\n        password: e.target.value\n      })),\n      value: logins.password,\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: _objectSpread(_objectSpread({}, publicStyles.startCenter), {}, {\n        marginTop: '24pt'\n      }),\n      children: /*#__PURE__*/_jsxDEV(CustomButton, {\n        text: '로그인',\n        style: {\n          width: '80pt',\n          height: '35pt',\n          background: '#6875dd'\n        },\n        onClick: login,\n        background: false,\n        fontColor: 'white'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this); // { //console.log('ads', logins) }\n\n\n  const Footer = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n\n  const userValidationCheck = () => {\n    const {\n      email,\n      password\n    } = logins;\n    const errorCatch = {\n      email: '',\n      password: ''\n    };\n    let getError = false;\n\n    if (email === '') {\n      getError = true;\n    }\n\n    if (password === '') {\n      getError = true;\n    }\n\n    setErrors(_objectSpread(_objectSpread({}, errors), errorCatch));\n    return getError;\n  };\n\n  const login = async () => {\n    try {\n      const error = await userValidationCheck();\n\n      if (error) {\n        alert('아이디나 비밀번호를 입력해주세요');\n      }\n\n      const response = await API_LOGIN(logins); //@ts-ignore\n\n      const data = response.data; //@ts-ignore\n\n      if (response.status === 200) {\n        if (data.status === 200) {\n          alert('로그인 성공');\n          Cookies.set('usertoken', data.data.token);\n          Cookies.set('useremail', logins.email);\n        }\n      } else {\n        alert('로그인이 실패하였습니다.');\n        console.log('@res : ', response);\n      }\n    } catch (error) {\n      alert('서버 에러');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      zIndex: 50\n    },\n    children: [Header(), Content(), Footer()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n\nexport default LoginContainer;","map":{"version":3,"sources":["/Users/gangbyeongheon/Desktop/tutordot/TutorDot_Web/src/containers/LoginContainer.tsx"],"names":["React","styled","Cookies","CustomLabel","CustomButton","publicStyles","LoginContext","API_LOGIN","InputLogin","input","width","borderRadius","height","border","padding","fontSize","background","PInput","p","margin","LoginContainer","logins","setLogins","useState","email","password","errors","setErrors","loginContext","useContext","Header","marginBottom","marginTop","Content","e","target","value","startCenter","login","Footer","display","justifyContent","userValidationCheck","errorCatch","getError","error","alert","response","data","status","set","token","console","log","zIndex"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from \"@emotion/styled\";\nimport Cookies from 'js-cookie'\nimport CustomLabel from '../custom/CustomLabel'\nimport CustomButton from '../custom/CustomButton'\nimport { loginForm } from '../types/index'\nimport { publicStyles } from '../types/publicStyles'\nimport LoginContext from \"../context/LoginContext\"\nimport API_LOGIN from \"../api/Account/AccountLogin\";\nconst InputLogin = styled.input(() => ({\n    /*  boxShadow: '2px 3px 2px 0px #00000029', */\n    width: '372px',\n    borderRadius: 8,\n    height: 54,\n    border: 0,\n    padding: '0 20px',\n    fontSize: 16,\n    background: '#F0F0F0'\n}))\nconst PInput = styled.p(() => ({\n    padding: 0,\n    margin: 3,\n}))\n\n\nconst LoginContainer: React.FunctionComponent = () => {\n    const [logins, setLogins] = React.useState<loginForm>({\n        email: '',\n        password: ''\n    });\n    const [errors, setErrors] = React.useState<loginForm>({\n        email: '',\n        password: ''\n    });\n    const loginContext = React.useContext(LoginContext);\n\n    const Header = () => (\n        <div>\n            <CustomLabel\n                fontSize={20}\n                fontType={'px'}\n                text={'시작하기'}\n                fontWeight={'bold'}\n                type={'center'}\n                style={{ marginBottom: 7 }}\n            />\n            <CustomLabel\n                fontSize={14}\n                fontType={'px'}\n                text={'관리자 전용페이지 입니다!. 관리자 계정으로 로그인해주세요.'}\n                type={'center'}\n                style={{ marginTop: 0, fontSize: 14, marginBottom: 20 }}\n            />\n        </div>\n    )\n    const Content = () => (\n        <div>\n            <PInput>이메일 주소</PInput>\n            <InputLogin style={{ marginBottom: 20 }} onChange={(e) => setLogins({ ...logins, email: e.target.value })} value={logins.email} type='email' />\n\n            <PInput>비밀번호</PInput>\n            <InputLogin onChange={(e) => setLogins({ ...logins, password: e.target.value })} value={logins.password} type=\"password\" />\n\n            <div style={{ ...publicStyles.startCenter, marginTop: '24pt' }}>\n                <CustomButton text={'로그인'} style={{ width: '80pt', height: '35pt', background: '#6875dd' }} onClick={login} background={false} fontColor={'white'} />\n            </div>\n        </div>\n    )\n    // { //console.log('ads', logins) }\n\n    const Footer = () => (\n        <div style={{\n            display: 'flex',\n            justifyContent: 'space-between'\n        }}>\n        </div>\n    )\n\n    const userValidationCheck = () => {\n        const { email, password } = logins\n        const errorCatch: loginForm = {\n            email: '',\n            password: ''\n        };\n        let getError = false\n        if (email === '') {\n            getError = true\n        }\n\n        if (password === '') {\n            getError = true\n        }\n\n        setErrors({ ...errors, ...errorCatch })\n        return getError;\n    }\n\n    const login = async () => {\n        try {\n            const error = await userValidationCheck()\n            if (error) {\n                alert('아이디나 비밀번호를 입력해주세요')\n            }\n            const response = await API_LOGIN(logins)\n            //@ts-ignore\n            const data: any = response.data\n            //@ts-ignore\n            if (response.status === 200) {\n                if (data.status === 200) {\n                    alert('로그인 성공')\n                    Cookies.set('usertoken', data.data.token)\n                    Cookies.set('useremail', logins.email)\n                }\n            } else {\n                alert('로그인이 실패하였습니다.')\n                console.log('@res : ', response)\n            }\n        } catch (error) {\n            alert('서버 에러')\n        }\n    }\n\n    return (\n        <div style={{ zIndex: 50 }}>\n            {Header()}\n            {Content()}\n            {Footer()}\n        </div>\n    )\n\n}\nexport default LoginContainer"]},"metadata":{},"sourceType":"module"}